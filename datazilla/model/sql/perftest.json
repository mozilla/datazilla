{
 "views":{
      "test_runs":{

         "sql":"SELECT tr.id AS 'test_run_id',
                       tr.build_id,
                       tr.revision,
                       tr.date_run,
                       b.processor,
                       b.build_type,
                       b.test_build_id,
                       t.name AS 'Test Name',
                       br.product,
                       br.branch,
                       br.version,
                       m.name AS 'machine',
                       m.cpu_speed,
                       os.name AS 'OS',
                       os.version AS 'OS Version'
                 FROM test_run AS tr
                 LEFT JOIN build AS b ON tr.build_id = b.id
                 LEFT JOIN test AS t ON tr.test_id = t.id
                 LEFT JOIN product AS br ON b.product_id = br.id
                 LEFT JOIN machine AS m ON b.machine_id = m.id
                 LEFT JOIN operating_system AS os ON b.operating_system_id = os.id
                 ORDER BY tr.id DESC
                 LIMIT 1000",

         "host":"master_host"

      },
      "test_run":{

         "sql":"SELECT tr.id AS 'test_run_id',
                       tr.build_id,
                       tr.revision,
                       tr.date_run,
                       b.processor,
                       b.build_type,
                       b.test_build_id,
                       t.name AS 'Test Name',
                       br.product,
                       br.branch,
                       br.version,
                       m.name AS 'machine',
                       m.cpu_speed,
                       os.name AS 'OS',
                       os.version AS 'OS Version'
                 FROM test_run AS tr
                 LEFT JOIN build AS b ON tr.build_id = b.id
                 LEFT JOIN test AS t ON tr.test_id = t.id
                 LEFT JOIN product AS br ON b.product_id = br.id
                 LEFT JOIN machine AS m ON b.machine_id = m.id
                 LEFT JOIN operating_system AS os ON b.operating_system_id = os.id
                 ORDER BY tr.id DESC
                 LIMIT 1000",

         "host":"master_host"

      },
      "test_value":{

         "sql":"SELECT tv.test_run_id,
                       tv.run_id,
                       p.url,
                       v.name,
                       tv.value
                FROM test_value AS tv
                LEFT JOIN pages AS p ON tv.page_id = p.id
                LEFT JOIN value AS v ON tv.value_id = v.id
                WHERE tv.test_run_id = ?",

         "host":"master_host"
      },

      "test_option_values":{

         "sql":"SELECT tov.test_run_id,
                       o.name,
                       tov.value
                FROM test_option_values AS tov
                LEFT JOIN `option` AS o ON tov.option_id = o.id
                WHERE tov.test_run_id = ?",

         "host":"master_host"
      },

      "test_aux_data":{

         "sql":"SELECT tad.test_run_id,
                       tad.run_id,
                       ad.name,
                       tad.numeric_data,
                       tad.string_data
                FROM test_aux_data AS tad
                LEFT JOIN aux_data AS ad ON tad.aux_data_id = ad.id
                WHERE tad.test_run_id = ?",

         "host":"master_host"
      }
 },
 "inserts":{
      "set_test":{

         "sql":"INSERT INTO test (`name`, `version`) VALUES (?, ?)",

         "host":"master_host"
      },
      "set_operating_system":{

         "sql":"INSERT INTO operating_system ( name, version ) VALUES (?, ?)",

         "host":"master_host"
      },
      "set_aux_data":{

         "sql":"INSERT INTO `aux_data` (`test_id`, `name`) VALUES (?, ?)",

         "host":"master_host"
      },
      "set_product_data":{
         "sql":"INSERT INTO `product` (`product`, `branch`, `version`) VALUES (?, ?, ?)",

         "host":"master_host"
      },
      "set_machine_data":{

         "sql":"INSERT INTO `machine` (`name`, `date_added`) VALUES (?, ?)",

         "host":"master_host"
      },
      "set_option_data":{

         "sql":"INSERT INTO `option` (`name`) VALUES (?)",

         "host":"master_host"
      },
      "set_pages_data":{

         "sql":"INSERT INTO `pages` (`test_id`, `url`) VALUES (?, ?)",

         "host":"master_host"
      },
      "set_build_data":{

         "sql":"INSERT INTO `build` (`operating_system_id`,
                                     `product_id`,
                                     `machine_id`,
                                     `test_build_id`,
                                     `processor`,
                                     `revision`,
                                     `build_type`,
                                     `build_date`)
                VALUES (?,?,?,?,?,?,?,?)",

         "host":"master_host"
      },
      "set_test_run_data":{

         "sql":"INSERT INTO `test_run` (`test_id`,
                                        `build_id`,
                                        `revision`,
                                        `date_run`)
                VALUES (?,?,?,?)",

         "host":"master_host"

      },
      "set_test_values":{

         "sql":"INSERT INTO `test_value` (`test_run_id`,
                                          `run_id`,
                                          `page_id`,
                                          `value_id`,
                                          `value`)
                VALUES (?,?,?,?,?)",

         "host":"master_host"
      },
      "set_aux_values":{

         "sql":"INSERT INTO `test_aux_data` (`test_run_id`,
                                             `run_id`,
                                             `aux_data_id`,
                                             `numeric_data`,
                                             `string_data`)
                VALUES (?,?,?,?,?)",

         "host":"master_host"
      },
      "set_test_option_values":{

         "sql":"INSERT INTO `test_option_values` (`test_run_id`,
                                                  `option_id`,
                                                  `value`)
                VALUES (?,?,?)",

         "host":"master_host"

      },
      "set_test_data":{

         "sql":"INSERT INTO `test_data` (`test_run_id`,
                                         `data`)
                VALUES (?,?)",

         "host":"master_host"
      },
      "set_summary_cache":{

         "sql":"INSERT INTO `summary_cache` (`item_id`, `item_data`, `value`, `date`)
                VALUES (?, ?, ?, ?)
                ON DUPLICATE KEY UPDATE `value`=?, `date`=?",

         "host":"master_host"
      },
      "set_test_collection":{

         "sql":"INSERT INTO `test_collection` (`name`, `description`)
                VALUES (?, ?)
                ON DUPLICATE KEY UPDATE `name`=?",

         "host":"master_host"
      },
      "set_test_collection_map":{

         "sql":"INSERT INTO `test_collection_map` (`test_collection_id`, `product_id`)
                VALUES (?, ?)",

         "host":"master_host"
      }
  },
  "selects":{
      "get_all_test_data":{

         "sql":"SELECT id, test_run_id, data
                FROM test_data
                WHERE id >= ?",

         "host":"master_host"

      },

      "get_test_run_summary":{

         "sql":"SELECT tr.id AS 'test_run_id', 
                       tr.revision,
                       tr.date_run, 
                       b.product_id, 
                       tr.test_id, 
                       b.operating_system_id,
                       ROUND( AVG(tv.value), 2 ) AS average, 
                       ROUND( MIN(tv.value), 2 ) AS min, 
                       ROUND( MAX(tv.value), 2 ) AS max, 
                       ROUND( STDDEV(tv.value), 2 ) AS 'standard_deviation',
                       ROUND( VARIANCE(tv.value), 2 ) AS variance
                FROM test_run AS tr
                LEFT JOIN test_value AS tv ON tr.id = tv.test_run_id
                LEFT JOIN build AS b ON tr.build_id = b.id
                WHERE (tr.date_run >= 'REP0' AND tr.date_run <= 'REP1') REP2
                GROUP BY tr.id, tr.revision, b.product_id, tr.test_id, b.operating_system_id
                ORDER BY tr.date_run, tr.test_id ASC",

          "host":"master_host"

      },

      "get_all_test_runs":{

         "sql":"SELECT tr.id AS 'test_run_id',
                       tr.revision,
                       tr.date_run,
                       b.product_id,
                       tr.test_id,
                       b.operating_system_id,
                       ROUND( AVG(tv.value), 2 ) AS average,
                       ROUND( MIN(tv.value), 2 ) AS min,
                       ROUND( MAX(tv.value), 2 ) AS max,
                       ROUND( STDDEV(tv.value), 2 ) AS 'standard_deviation',
                       ROUND( VARIANCE(tv.value), 2 ) AS variance
                FROM test_run AS tr
                LEFT JOIN test_value AS tv ON tr.id = tv.test_run_id
                LEFT JOIN build AS b ON tr.build_id = b.id
                GROUP BY tr.id, tr.revision, b.product_id, tr.test_id, b.operating_system_id
                ORDER BY date_run ASC",

          "host":"master_host"

      },
      "get_test_run_values":{

         "sql":"SELECT tv.test_run_id,
                        tv.page_id,
                        tv.run_id,
                        tr.revision,
                        tr.date_run,
                        b.product_id,
                        tr.test_id,
                        b.operating_system_id,
                        p.url,
                        v.name AS value_name,
                        tv.value
               FROM test_value AS tv
               LEFT JOIN pages AS p ON tv.page_id = p.id
               LEFT JOIN value AS v ON tv.value_id = v.id
               LEFT JOIN test_run AS tr ON tv.test_run_id = tr.id
               LEFT JOIN build AS b ON tr.build_id = b.id
               WHERE tv.test_run_id = ?
               ORDER BY p.url, tv.value ASC",

         "host":"master_host"

      },
      "get_test_run_value_summary":{

         "sql":"SELECT tv.test_run_id,
                        tv.page_id,
                        tv.run_id,
                        tr.revision,
                        tr.test_id,
                        tr.date_run,
                        b.product_id,
                        tr.test_id,
                        b.operating_system_id,
                        p.url,
                        ROUND( AVG(tv.value), 2 ) AS average,
                        ROUND( MIN(tv.value), 2 ) AS min,
                        ROUND( MAX(tv.value), 2 ) AS max,
                        ROUND( STDDEV(tv.value), 2 ) AS 'standard_deviation',
                        ROUND( VARIANCE(tv.value), 2 ) AS variance
               FROM test_value AS tv
               LEFT JOIN pages AS p ON tv.page_id = p.id
               LEFT JOIN value AS v ON tv.value_id = v.id
               LEFT JOIN test_run AS tr ON tv.test_run_id = tr.id
               LEFT JOIN build AS b ON tr.build_id = b.id
               WHERE tv.test_run_id = ?
               GROUP BY tv.page_id
               ORDER BY p.url, tv.value ASC",

         "host":"master_host"

      },
      "get_page_values":{

         "sql":"SELECT tv.id AS test_value_id,
                        tv.test_run_id,
                        tv.page_id,
                        tv.run_id,
                        tr.revision,
                        tr.date_run,
                        b.product_id,
                        tr.test_id,
                        b.operating_system_id,
                        p.url,
                        v.name AS value_name,
                        tv.value
               FROM test_value AS tv
               LEFT JOIN pages AS p ON tv.page_id = p.id
               LEFT JOIN value AS v ON tv.value_id = v.id
               LEFT JOIN test_run AS tr ON tv.test_run_id = tr.id
               LEFT JOIN build AS b ON tr.build_id = b.id
               WHERE tv.test_run_id = ? AND tv.page_id = ?
               ORDER BY p.url, tv.run_id ASC",

         "host":"master_host"

      },
      "get_product_test_os_map":{

         "sql":"SELECT b.product_id, tr.test_id, b.operating_system_id
                FROM test_run AS tr
                LEFT JOIN build AS b ON tr.build_id = b.id
                WHERE b.product_id IN (
                  SELECT product_id
                  FROM product )
               GROUP BY b.product_id, tr.test_id, b.operating_system_id",

          "host":"master_host"
      },
      "get_tests":{

         "sql":"SELECT `id`, `name`, `version` FROM `test`",

         "host":"master_host"

      },
      "get_operating_systems":{

         "sql":"SELECT `id`, `name`, `version` FROM operating_system",

         "host":"master_host"
      },
      "get_aux_data":{

         "sql":"SELECT `id`, `test_id`, `name` FROM `aux_data`",

         "host":"master_host"
      },
      "get_product_data":{

         "sql":"SELECT `id`, `product`, `branch`, `version` FROM `product`",

         "host":"master_host"
      },
      "get_machines":{

         "sql":"SELECT `id`, `name` FROM `machine`",

         "host":"master_host"

      },
      "get_options":{

         "sql":"SELECT `id`, `name` FROM `option`",

         "host":"master_host"
      },
      "get_aux_data":{

         "sql":"SELECT `id`, `test_id`, `name` FROM `aux_data`",

         "host":"master_host"
      },
      "get_pages":{

         "sql":"SELECT `id`, `test_id`, `url` FROM `pages`",

         "host":"master_host"
      },
      "get_last_insert_id":{

         "sql":"SELECT LAST_INSERT_ID() AS 'id'",

         "host":"master_host"
      },
      "get_summary_cache":{

         "sql":"SELECT `item_id`, `item_data`, `value`, `date`
                FROM `summary_cache`
                WHERE `item_id` = ? AND `item_data` = ?",

         "host":"master_host"
      },
      "get_all_summary_cache_data":{

         "sql":"SELECT `item_id`, `item_data`, `value`, `date`
                FROM `summary_cache`",

         "host":"master_host"
      },
      "get_test_collections":{

         "sql":"SELECT tc.id,
                       tc.name,
                       tc.description,
                       tcm.test_id,
                       tcm.product_id,
                       tcm.operating_system_id
                FROM test_collection AS tc
                LEFT JOIN test_collection_map AS tcm ON tc.id = tcm.test_collection_id
                LEFT JOIN test AS t ON tcm.test_id = t.id
                ORDER BY tc.name",

         "host":"master_host"
      }
   }
}

